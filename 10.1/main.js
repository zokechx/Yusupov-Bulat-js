class Transport {
      constructor(color, material, manufacturer, maxSpeed) {
        this.color = color;
        this.material = material;
        this.manufacturer = manufacturer;
        this.maxSpeed = maxSpeed;
      }

      startEngine() {
        console.log('Engine starting...');
      }

      // –í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –ø–æ–ª—è
      showCharacteristics() {
        // –í–∑—è—Ç–æ –∏–∑ StackOverflow
        for (var prop in this) {
          if (Object.prototype.hasOwnProperty.call(this, prop)) {
            console.log(`${prop}: ${this[prop]}`);
          }
        }
      }
    }

    // 1) –ö–ª–∞—Å—Å Boat
    console.log('üö§ –õ–æ–¥–∫–∞');
    class Boat {
      constructor(color, material, maxSpeed) {
        this.color = color;
        this.material = material;
        this.maxSpeed = maxSpeed;
      }

      sail() {
        console.log('–ü–ª—ã–≤—ë–º –ø–æ –≤–æ–ª–Ω–∞–º!');
      }

      showCharacteristics() {
        for (var prop in this) {
          if (Object.prototype.hasOwnProperty.call(this, prop)) {
            console.log(`${prop}: ${this[prop]}`);
          }
        }
      }
    }

    const boat = new Boat('—Å–∏–Ω–∏–π', '–ø–ª–∞—Å—Ç–∏–∫', 50);
    boat.sail();
    boat.showCharacteristics();

    console.log('///');

    // 2) –ö–ª–∞—Å—Å Bus
    console.log('üöå –ê–≤—Ç–æ–±—É—Å');
    class Bus extends Transport {
      constructor(color, material, manufacturer, maxSpeed, passengerCount) {
        super(color, material, manufacturer, maxSpeed);
        this.passengerCount = passengerCount;
      }

      drive() {
        console.log(`–ï–¥–µ–º –ø–æ –º–∞—Ä—à—Ä—É—Ç—É —Å ${this.passengerCount} –ø–∞—Å—Å–∞–∂–∏—Ä–∞–º–∏`);
      }
    }

    const bus = new Bus('–∂–µ–ª—Ç—ã–π', '–º–µ—Ç–∞–ª–ª', '–õ–∏–ê–ó', 90, 40);
    bus.showCharacteristics();
    bus.drive();

    console.log('///');

    // 3) –ö–ª–∞—Å—Å Plane —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º startEngine()
    console.log('‚úàÔ∏è –°–∞–º–æ–ª–µ—Ç');
    class Plane extends Transport {
      constructor(color, material, manufacturer, maxSpeed, maxHeight) {
        super(color, material, manufacturer, maxSpeed);
        this.maxHeight = maxHeight;
      }

      startEngine() {
        console.log('–¢—É—Ä–±–∏–Ω—ã –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è...');
      }

      fly() {
        console.log('Flying...');
      }
    }

    const plane = new Plane('white', 'iron', 'Boeing', 90, 40);
    plane.startEngine();
    plane.fly();
    plane.showCharacteristics();